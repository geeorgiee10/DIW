@use "functions" as *;
@use "variables" as *;


/// Configurar un contenedor con flex
/// @group layout
/// @param {String} $display [flex] - Tipo de display
/// @param {String} $direccion [row] - Dirección del flex
/// @param {String} $justifica [center] - Valor para justify-content
/// @param {String} $alinea [center] - Valor para align-items
/// @param {Number} $gap [1rem] - Espacio entre elementos
/// @param {Number} $margin [1rem] - Margen del contenedor
/// @param {String} $flex-wrap [nowrap] - Si se cambia de linea al llegar al limite
/// @example scss
///   .container {
///     @include flex-center($direccion: column, $gap: 2rem);
///   }
@mixin flex-center($display: flex, $direccion: row, $justifica:center, $alinea: center, $gap: 1rem, $margin: 1rem, $flex-wrap: nowrap){
    display: $display;
    flex-direction: $direccion;
    justify-content: $justifica;
    align-items: $alinea;
    flex-wrap: $flex-wrap;
    gap: $gap;
    margin: $margin;
}

/// Para establecer el tamaño de los elementos
/// @group layout
/// @param {Length} $width [100%] - Ancho del elemento
/// @param {Length} $height [100%] - Alto del elemento
/// @example scss
///   .box {
///     @include tamaño($width: 50%, $height: 300px);
///   }
@mixin tamaño($width: 100%, $height: 100%){
    height: $height;
    width: $width;
}

/// Configurar un contenedor grid
/// @group layout
/// @param {Number} $columnas [8] - Número de columnas
/// @param {Number} $filas [4] - Número de filas
/// @param {Length} $gap [1.6rem] - Espacio entre columnas
/// @param {Length} $rowgap [1.6rem] - Espacio entre filas
/// @example scss
///   .grid-container {
///     @include grid($columnas: 4, $filas: 2);
///   }
@mixin grid($columnas: 8, $filas: 4, $gap: 1.6rem, $rowgap: 1.6rem) {
    display: grid;
    gap: $gap;
    grid-template-columns: minmax(6rem, 1fr) repeat($columnas, minmax(min-content, 16rem)) minmax(6rem, 1fr);
    grid-template-rows: repeat($filas, min-content);
    grid-row-gap: $rowgap;
}

/// Da estilos a los encabezados
/// @group typography
/// @example scss
///   body {
///     @include estilo-encabezados();
///   }
@mixin estilo-encabezados() {
    @for $i from 1 through 6 {
      h#{$i} {
        font-family: $font-family-secondary; 
        font-weight: bold;
        text-transform: uppercase;
        text-align: center;
        margin-bottom: 10px;
  
        font-size: font-size(5xl) - ($i * 0.65); 
  
        color: color(button); 
        @include media("medium"){
            font-size: font-size(4xl) - ($i * 0.45); 
        }
      }
    }
}
  
/// Para crear un menu de navegación responsive
/// @group components
/// @example scss
///   .main-nav {
///     @include nav();
///   }
@mixin nav() {
    @include tamaño($height:auto);
    @include flex-center($justifica: space-between, $gap: 1.2rem);
    
    @include media("very-large"){
        @include flex-center($display: none, $direccion: column, $alinea: center, $margin: 0rem, $flex-wrap: nowrap);
        @include tamaño($height: auto);
    }
    &-list {
        list-style: none;
        @include flex-center($justifica: center, $gap: font-size(4xl));
      
        @include media("very-large"){
            @include flex-center($direccion: column, $gap: 0, $margin: 0);
            @include tamaño($height: auto);
            padding: 0;
        }

      &-item {
        @include media("very-large"){
            @include tamaño($width: 95%, $height: auto);
            @include flex-center($margin: 0, $gap: 0);
        }

          .nav-link {
              text-decoration: none;
              font-family: $font-family-secondary;
              font-size: font-size(xl);
              font-weight: bold;
              color: color(text);
              transition: all 0.3s;

              @include media("very-large"){
                padding: font-size(md);
                text-align: center;
                @include tamaño($width: 100%, $height: auto);
              }

              &:hover {
                  color: color(button);
                  background-color: color(secondary);
                  padding: font-size(xs) font-size(md);
                  border-radius: 5px;
              }
          }
          
      }
  }
  .btn{
      background-color: color(button);
      color: color(text);
      border: none;
      padding: font-size(sm) font-size(2xl);
      font-size: font-size(lg);
      font-weight: bold;
      border-radius: 5px;
      cursor: pointer;
      transition: all 0.3s ease;

      &:hover {
          background-color: color(secondary);
          color: color(button);
      }
  }
    

}

/// Para crear media queries para diferentes tamaños
/// @group responsive
/// @param {String} $clave - Clave del mapa $sizes (ej: "small", "medium", "large")
/// @content Estilos que se aplicarán dentro de la media query
/// @example scss
///   .element {
///     @include media("medium") {
///       font-size: 14px;
///     }
///   }
@mixin media($clave){
    $size: map-get($map: $sizes, $key: $clave);
    @media only screen and (max-width: $size) {
        @content;
    }
}

/// Para crear los estilos de sombra a los elementos
/// @group effects
/// @param {Length} $sombraX - Desplazamiento horizontal de la sombra
/// @param {Length} $sombraY - Desplazamiento vertical de la sombra
/// @param {Length} $transparencia - Difuminado de la sombra
/// @param {Color} $color - Color de la sombra
/// @example scss
///   .card {
///     @include sombra(0px, 4px, 8px, rgba(0, 0, 0, 0.2));
///   }
@mixin sombra($sombraX, $sombraY, $transparencia, $color) {
    box-shadow: $sombraX $sombraY $transparencia $color;
}

/// Para crear los estilos de sombra a los texto
/// @group effects
/// @param {Length} $sombraX - Desplazamiento horizontal de la sombra
/// @param {Length} $sombraY - Desplazamiento vertical de la sombra
/// @param {Length} $transparencia - Difuminado de la sombra
/// @param {Color} $color - Color de la sombra
/// @example scss
///   .heading {
///     @include sombraTexto(1px, 1px, 2px, rgba(0, 0, 0, 0.5));
///   }
@mixin sombraTexto($sombraX, $sombraY, $transparencia, $color){
    text-shadow: $sombraX $sombraY $transparencia $color;
}
  
/// Crear los tabs seleccionables
/// @group components
/// @example scss
///   .tab-button {
///     @include tab();
///   }
@mixin tab(){
    @include tamaño($width: 10rem);
    color: color(text-highlight);
    padding: font-size(xs) font-size(sm);
    font-size: font-size(md);
    font-weight: bold;
    cursor: pointer;
    border: none;
    border-radius: $border-radius;
    border-bottom: 3px solid transparent;
    transition: all 0.3s ease-in-out;
        
    @include media("medium"){
        @include tamaño($width: 8rem);
    }

    &.active {
        @include tamaño($width: 10rem, $height: 80%);
        color: color(primary);

        @include media("medium"){
            @include tamaño($width: 6rem, $height: 80%);
        }
    }
        
    &:hover {
        color: color(tertiary);
    }
}

/// Crea un card con imagen y contenido
/// @group components
/// @example scss
///   .product-card {
///     @include card();
///   }
@mixin card(){
    @include tamaño($width: 20%, $height: 90%);
    @include flex-center($direccion: column);
    background-color: color(text);
    border-radius: $border-radius;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    overflow: hidden;
    transition: transform 0.3s ease-in-out;

    @include media("medium"){
        @include tamaño($width: 70%, $height: 90%);
    }
        
    &:hover {
        transform: scale(1.05);
    }
        
    &-img {
        @include tamaño($height: 85%);
        & img {
            @include tamaño();
            object-fit: cover;       
        }
    }
        
    &-content {
        padding: font-size(md);
        text-align: center;
        
        &-title {
            font-size: font-size(xl);
            font-weight: bold;
            color: color(primary);
            margin-bottom: font-size(xs);
        }
    }
}

/// Crea otro tipo de card para las opiniones con imagen y contenido
/// @group components
/// @example scss
///   .testimonial {
///     @include cardOpiniones();
///   }
@mixin cardOpiniones(){
    @include tamaño($width: 70%);
    @include flex-center($margin: 0, $justifica: left);
    background-color: color(text);
    border-radius: $border-radius2;
    @include sombra($sombraX: 0px, $sombraY: 4px, $transparencia: 8px, $color:rgba(0, 0, 0, 0.3));
    padding: font-size(2xl);
    transition: all 0.5s ease;
    
    @include media("small"){
        @include flex-center($margin: 0, $direccion: column);
    }

    &:hover{
        transform: scale(1.05);
    }

    &-img {
        @include tamaño($width: 10rem, $height: 10rem); 
        @include limitTamaño();
        overflow: hidden;
        @include media("small"){
            @include tamaño($width: 5rem, $height: 5rem); 
            @include limitTamaño($minHeight: 10rem, $maxHeight: 10rem, $minWidth: 10rem, $maxWidth: 10rem)
        }
        & img{
            @include tamaño();
            object-fit: cover;
                    border-radius: $border-redondo;
        }
    }

    &-content{
        & h3 {
            font-size: font-size(2xl);
            color: color(primary);
        }
                
        & p {
            font-size: font-size(md);
            color: color(secondary);
        }
    }
}

/// Para establecer límites de tamaño mínimo y máximo para un elemento
/// @group layout
/// @param {Length} $minHeight [15rem] - Altura mínima
/// @param {Length} $maxHeight [15rem] - Altura máxima
/// @param {Length} $minWidth [15rem] - Ancho mínimo
/// @param {Length} $maxWidth [15rem] - Ancho máximo
/// @example scss
///   .container-fixed {
///     @include limitTamaño($minHeight: 20rem, $maxWidth: 30rem);
///   }
@mixin limitTamaño($minHeight: 15rem, $maxHeight: 15rem, $minWidth: 15rem, $maxWidth: 15rem){
    min-height: $minHeight;
    max-height: $maxHeight;
    min-width: $minWidth;
    max-width: $maxWidth;
}